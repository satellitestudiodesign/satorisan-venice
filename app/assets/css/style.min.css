/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:10px}body{font:300 1.4rem/2.2rem Montserrat,Helvetica,Arial;color:#444}body,html{min-height:100vh;overflow-x:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.nav{margin-left:3rem}.nav a{display:block;margin:1.5rem 0 0;text-decoration:none}.nav a.section{color:#8cbf3c}.nav a.section.current,.nav a.section:hover{font-weight:500}.nav a.subsection{color:initial;margin:0}.nav a.subsection.current,.nav a.subsection:hover{font-weight:500}.sidebar{height:100vh;width:17rem;float:left;position:absolute;overflow:hidden;left:0;transition:left .2s linear}.sidebar .logo{cursor:pointer;display:block;width:100%;height:auto;transition:transform .3s ease-out}.sidebar .logo#logo-venice{transform:translateY(-100%)}.sidebar.fixed{position:fixed;top:0;overflow-y:scroll}.sidebar.fixed #logo-venice{transform:translateY(0)}.sidebar .toggle{border:none;display:block;width:4.4rem;height:4.4rem;box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);position:fixed;top:1rem;left:1rem;background:url(../img/menu.png) 50%,#fff;background-size:60% 60%;background-repeat:no-repeat;display:none;transition:left .2s linear;cursor:pointer}.sidebar .toggle:focus{outline:0}.sidebar .toggle.open{left:18rem}.main{position:absolute;width:calc(100% - 17rem);left:17rem}.content-wrapper{width:100%;margin:0 auto;max-width:90rem}section{margin:20vh 0}section>p{max-width:60ch;margin:2rem}.one-column{text-align:center}.one-column p{margin:0 auto;max-width:60ch}.one-column ul{margin:0 auto;max-width:50ch}.one-column video{width:100%;max-height:66.66vh;height:auto;cursor:pointer}.one-column h3{text-align:left}.two-columns{display:-ms-flexbox;display:flex}.two-columns .column{min-width:50%}.two-columns .column:not(:last-child){padding-right:2rem}.two-columns .column img{width:100%;height:100%;object-fit:contain}.two-columns .column h1,.two-columns .column h2,.two-columns .column h3,.two-columns .column h4,.two-columns .column p,.two-columns .column ul{max-width:60ch;margin:2rem 0 2rem 2rem}.two-columns .column h1.inline,.two-columns .column h2.inline,.two-columns .column h3.inline,.two-columns .column h4.inline,.two-columns .column p.inline,.two-columns .column ul.inline{float:left;margin-right:1ch;transform:translateY(1.1em)}.full-images .content{position:absolute;margin:7rem 5rem}.full-images img{width:100%;height:60rem;object-fit:cover;margin:0;display:block}#lookbook h1,#lookbook p{color:#fff}#useexamples .content{margin:2rem 5rem}#useexamples h3{color:#fff}.cover{width:100vw;height:100vh;z-index:1;background:url(../img/portada.jpg);background-size:cover;background-position:bottom;background-repeat:no-repeat}.cover button{position:absolute;display:block;left:50%;bottom:5rem;transform:translateX(-50%);background:#fff;border:1px solid #659cbe;text-transform:uppercase;cursor:pointer;padding:1rem 2rem}.cover .language-selector{position:absolute;background:#fff;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);right:1rem;top:1rem;color:#d3d3d3}.cover .language-selector a{display:block;text-decoration:none;color:initial;padding:1rem;width:4.4rem;text-align:center}.cover .language-selector a.current{font-weight:700;color:#8cbf3c}.cover .language-selector a:hover{font-weight:700}.cover .language-selector a:not(:first-child){border-top:1px solid #d3d3d3}.lazy{opacity:0;transition:opacity .5s ease-in}@font-face{font-family:Venice;src:url(../type/venice.ttf) format("truetype");font-style:normal;font-weight:400;text-rendering:optimizeLegibility}h1{font-size:7.2rem;color:#685d41}h1,h2{font-family:Venice,sans-serif;text-transform:uppercase;letter-spacing:.1em;line-height:1.2em;margin:1rem}h2{color:#8cbf3c;font-size:3.6rem}h2.inline{float:left;margin-right:1ch;transform:translateY(.9em)}h3{font-size:1.4rem;line-height:1.5em;font-weight:300;text-transform:uppercase;margin:0}h3.inline{float:left;margin-right:1ch}h4{color:#8cbf3c;font-size:1.4rem;line-height:1.5em;text-transform:uppercase;margin-top:1rem}.centered{text-align:center;margin:0 auto}.small{font-size:1.1rem}ul{padding:0 0 0 3rem;text-align:left}::selection{background:#659cbe;color:#fff;text-shadow:none}::-moz-selection{background:#659cbe;color:#fff;text-shadow:none}::-webkit-selection{background:#659cbe;color:#fff;text-shadow:none}.catalog-index{display:-ms-flexbox;display:flex;overflow-x:auto;-webkit-overflow-scrolling:touch;padding:2rem}.catalog-index h2{margin:2rem 0}.catalog-card{width:25%;min-width:20rem;padding:0 2rem 2rem 0}.catalog-card img{width:100%;height:15rem;object-fit:cover}.catalog-card a{border:none;background:#8cbf3c;color:#fff;font-weight:500;line-height:1;padding:1rem 2rem;text-decoration:none;cursor:pointer}.catalog-card a:hover{background:#709830}.catalog-row{background:#efefef;border:1px solid #efefef;margin-bottom:1rem;display:-ms-grid;display:grid;grid-template-columns:20rem 1fr 1fr;-ms-grid-columns:20rem 1fr 1fr;height:15rem;overflow:hidden}.catalog-row .info{padding:2rem}.catalog-row .info p{margin:0}.catalog-row .detail,.catalog-row .full-shoe{display:block;height:100%;width:100%;object-fit:cover}@media only screen and (max-width:900px){.main{left:0;width:100%;overflow-x:hidden}.sidebar{z-index:2;position:fixed;background:#fff;top:0;overflow-y:scroll;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);left:-200px}.sidebar.shown{left:0}.sidebar .logo#logo-venice{transform:translateY(0)}.sidebar .toggle{display:block}h1{font-size:6rem}h2.inline{transform:none}.catalog-index{padding:0 0 0 2rem}.catalog-row{grid-template-columns:1fr 1fr;-ms-grid-columns:1fr 1fr;-ms-grid-rows:15rem 18rem;grid-template-rows:15rem 18rem;height:auto}.full-shoe{-ms-grid-column-span:2;grid-column-end:span 2}.detail{-ms-grid-row:1;grid-row-start:1;-ms-grid-column:2;grid-column-start:2}img{max-height:30rem}.two-columns{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.two-columns .column{min-width:100%}.two-columns .column h2.inline{transform:translateY(.5em)}.one-column ul{margin:0 2rem}.full-images .content{position:relative;margin:0 1rem}.full-images img{height:auto}#lookbook h1,#lookbook p,#useexamples h3{color:initial}.cover{height:60vh;z-index:0;background-size:cover;background-position-y:top}.cover button{bottom:40vh}}@media only screen and (min-width:1500px){html{font-size:12px}}@media only screen and (min-width:1800px){.content-wrapper{max-width:120rem}.full-images img{height:70rem}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
