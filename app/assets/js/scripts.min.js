/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
!function(e,o,s,t){"use strict";function n(e){console.log("mousemove"),e.pageX<200?(a.removeClass("hidden"),i.removeClass("full")):(a.addClass("hidden"),i.addClass("full"))}function l(){var s=e(o).width();s>=1280?(e(o).off("mousemove",n),a.removeClass("hidden"),i.removeClass("full")):s<1280&&s>900?e(o).off("mousemove",n).on("mousemove",n):(e(o).off("mousemove",n),a.addClass("hidden"),i.addClass("full"))}e(function(){}),e('a[href*="#"]').on("click",function(s){s.preventDefault(),e(".current").removeClass("current"),e(this).addClass("current");var t=(e(o).height()-e(e(this).attr("href")).height())/2-50;t<0&&(t=0),e("html, body").animate({scrollTop:e(e(this).attr("href")).offset().top-t},500)});var a=e(".sidebar"),i=e(".main");l(),e(o).on("resize",l),e(".lazy").unveil(null,function(){e(this).load(function(){this.style.opacity=1})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwibW91c2VNb3ZlSGFuZGxlciIsImUiLCJjb25zb2xlIiwibG9nIiwicGFnZVgiLCJzaWRlYmFyIiwicmVtb3ZlQ2xhc3MiLCJtYWluIiwiYWRkQ2xhc3MiLCJzaG93T3JIaWRlTWVudSIsInciLCJ3aWR0aCIsIm9mZiIsIm9uIiwicHJldmVudERlZmF1bHQiLCJ0aGlzIiwib2Zmc2V0IiwiaGVpZ2h0IiwiYXR0ciIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJ0b3AiLCJ1bnZlaWwiLCJsb2FkIiwic3R5bGUiLCJvcGFjaXR5IiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztDQUFBLFNBQUFBLEVBQUFDLEVBQUFDLEVBQUFDLEdBRUEsWUFvQkEsU0FBQUMsR0FBQUMsR0FDQUMsUUFBQUMsSUFBQSxhQUNBRixFQUFBRyxNQUFBLEtBQ0FDLEVBQUFDLFlBQUEsVUFDQUMsRUFBQUQsWUFBQSxVQUVBRCxFQUFBRyxTQUFBLFVBQ0FELEVBQUFDLFNBQUEsU0FJQSxRQUFBQyxLQUNBLEdBQUFDLEdBQUFkLEVBQUFDLEdBQUFjLE9BQ0FELElBQUEsTUFDQWQsRUFBQUMsR0FBQWUsSUFBQSxZQUFBWixHQUNBSyxFQUFBQyxZQUFBLFVBQ0FDLEVBQUFELFlBQUEsU0FDQUksRUFBQSxNQUFBQSxFQUFBLElBQ0FkLEVBQUFDLEdBQUFlLElBQUEsWUFBQVosR0FDQWEsR0FBQSxZQUFBYixJQUVBSixFQUFBQyxHQUFBZSxJQUFBLFlBQUFaLEdBQ0FLLEVBQUFHLFNBQUEsVUFDQUQsRUFBQUMsU0FBQSxTQXpDQVosRUFBQSxjQUlBQSxFQUFBLGdCQUFBaUIsR0FBQSxRQUFBLFNBQUFaLEdBQ0FBLEVBQUFhLGlCQUNBbEIsRUFBQSxZQUFBVSxZQUFBLFdBQ0FWLEVBQUFtQixNQUFBUCxTQUFBLFVBQ0EsSUFBQVEsSUFBQXBCLEVBQUFDLEdBQUFvQixTQUFBckIsRUFBQUEsRUFBQW1CLE1BQUFHLEtBQUEsU0FBQUQsVUFBQSxFQUFBLEVBQ0FELEdBQUEsSUFBQUEsRUFBQSxHQUNBcEIsRUFBQSxjQUFBdUIsU0FDQUMsVUFBQXhCLEVBQUFBLEVBQUFtQixNQUFBRyxLQUFBLFNBQUFGLFNBQUFLLElBQUFMLEdBQ0EsTUFHQSxJQUFBWCxHQUFBVCxFQUFBLFlBQ0FXLEVBQUFYLEVBQUEsUUE0QkFhLEtBRUFiLEVBQUFDLEdBQUFnQixHQUFBLFNBQUFKLEdBRUFiLEVBQUEsU0FBQTBCLE9BQUEsS0FBQSxXQUNBMUIsRUFBQW1CLE1BQUFRLEtBQUEsV0FDQVIsS0FBQVMsTUFBQUMsUUFBQSxPQUlBQyxPQUFBN0IsT0FBQUMiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuICAkKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBGYXN0U2hlbGxcbiAgfSk7XG5cbiAgJCgnYVtocmVmKj1cIiNcIl0nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAkKCcuY3VycmVudCcpLnJlbW92ZUNsYXNzKCdjdXJyZW50Jyk7XG4gICAgJCh0aGlzKS5hZGRDbGFzcygnY3VycmVudCcpO1xuICAgIHZhciBvZmZzZXQgPSAoJCh3aW5kb3cpLmhlaWdodCgpIC0gJCgkKHRoaXMpLmF0dHIoJ2hyZWYnKSkuaGVpZ2h0KCkpIC8gMiAtIDUwO1xuICAgIGlmIChvZmZzZXQgPCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XG4gICAgICBzY3JvbGxUb3A6ICQoJCh0aGlzKS5hdHRyKCdocmVmJykpLm9mZnNldCgpLnRvcCAtIG9mZnNldFxuICAgIH0sIDUwMCk7XG4gIH0pO1xuXG4gIHZhciBzaWRlYmFyID0gJCgnLnNpZGViYXInKTtcbiAgdmFyIG1haW4gPSAkKCcubWFpbicpO1xuXG4gIGZ1bmN0aW9uIG1vdXNlTW92ZUhhbmRsZXIoZSkge1xuICAgIGNvbnNvbGUubG9nKFwibW91c2Vtb3ZlXCIpO1xuICAgIGlmIChlLnBhZ2VYIDwgMjAwKSB7XG4gICAgICBzaWRlYmFyLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcbiAgICAgIG1haW4ucmVtb3ZlQ2xhc3MoJ2Z1bGwnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2lkZWJhci5hZGRDbGFzcygnaGlkZGVuJyk7XG4gICAgICBtYWluLmFkZENsYXNzKCdmdWxsJyk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2hvd09ySGlkZU1lbnUoKSB7XG4gICAgdmFyIHcgPSAkKHdpbmRvdykud2lkdGgoKTtcbiAgICBpZiAodyA+PSAxMjgwKSB7XG4gICAgICAkKHdpbmRvdykub2ZmKCdtb3VzZW1vdmUnLCBtb3VzZU1vdmVIYW5kbGVyKTtcbiAgICAgIHNpZGViYXIucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgbWFpbi5yZW1vdmVDbGFzcygnZnVsbCcpO1xuICAgIH0gZWxzZSBpZiAodyA8IDEyODAgJiYgdyA+IDkwMCkge1xuICAgICAgJCh3aW5kb3cpLm9mZignbW91c2Vtb3ZlJywgbW91c2VNb3ZlSGFuZGxlcilcbiAgICAgICAgLm9uKCdtb3VzZW1vdmUnLCBtb3VzZU1vdmVIYW5kbGVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJCh3aW5kb3cpLm9mZignbW91c2Vtb3ZlJywgbW91c2VNb3ZlSGFuZGxlcik7XG4gICAgICBzaWRlYmFyLmFkZENsYXNzKCdoaWRkZW4nKTtcbiAgICAgIG1haW4uYWRkQ2xhc3MoJ2Z1bGwnKTtcbiAgICB9XG4gIH1cbiAgc2hvd09ySGlkZU1lbnUoKTtcblxuICAkKHdpbmRvdykub24oJ3Jlc2l6ZScsIHNob3dPckhpZGVNZW51KTtcblxuICAkKFwiLmxhenlcIikudW52ZWlsKG51bGwsIGZ1bmN0aW9uICgpIHtcbiAgICAkKHRoaXMpLmxvYWQoZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5zdHlsZS5vcGFjaXR5ID0gMTtcbiAgICB9KTtcbiAgfSk7XG5cbn0pKGpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7Il19
